{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0",
    "title": "WorldCup Game Handling API",
    "description": "This API aims to manipulate the WorldCup games\n\nGithub repository where the Swagger and API files are contained: [https://github.com/ruicarvalho1/Project_SD](https://github.com/ruicarvalho1/Project_SD)"
  },
  "host": "api.example.com",
  "basePath": "/v1",
  "schemes": ["https"],

  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },

  "paths": {
    "/token": {
      "post": {
        "tags": ["Authentication"],
        "security": [{ "bearerAuth": [] }],
        "summary": "Auth",
        "description": "This can only be done by the logged in user.",
        "requestBody": {
          "description": "Created user object"
        },
        "parameters": [],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/users": {
      "post": {
        "tags": ["Users"],
        "security": [{ "bearerAuth": [] }],
        "summary": "Create user",
        "description": "This can only be done by the logged in user.",
        "requestBody": {
          "description": "Created user object"
        },
        "parameters": [],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },

    "/users/{id}": {
      "get": {
        "tags": ["Users"],
        "summary": "Get user by id",
        "security": [{ "bearerAuth": [] }],
        "description": "",
        "parameters": [
          {
            "name": "id_user",
            "in": "path",
            "description": "The name that needs to be fetched. Use user1 for testing. ",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "roles",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["admin", "editor", "viewer"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid username supplied"
          },
          "404": {
            "description": "User not found"
          },
          "406": {
            "description": "Not acceptable"
          }
        }
      },
      "put": {
        "tags": ["Users"],
        "summary": "Update user",
        "security": [{ "bearerAuth": [] }],
        "description": "This can only be done by the logged in user.",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "name that need to be deleted",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Update an existent user in the store"
        },
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      },
      "delete": {
        "tags": ["Users"],
        "summary": "Delete user",
        "security": [{ "bearerAuth": [] }],
        "description": "This can only be done by the logged in user.",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The name that needs to be deleted",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Competition not found"
          }
        }
      }
    },

    "/competitions": {
      "get": {
        "summary": "Get all Competitions",
        "description": "Returns a list of competions",
        "security": [{ "bearerAuth": [] }],
        "tags": ["Competition"],

        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Competition not found"
          },
          "406": {
            "description": "Not acceptable"
          }
        }
      },
      "post": {
        "tags": ["Competition"],
        "security": [{ "bearerAuth": [] }],
        "summary": "Create Competition by ID",
        "description": "Create a single competition",
        "parameters": [
          {
            "name": "year",
            "in": "query",
            "required": true,
            "description": "The year the game took place",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Competition not found"
          },
          "406": {
            "description": "Not acceptable"
          }
        }
      }
    },
    "/competition/{id}/stages": {
      "get": {
        "tags": ["Competition"],
        "summary": "Find Stage Competition by ID",
        "description": "Returns a single competition",
        "security": [{ "bearerAuth": [] }],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Competition not found"
          },
          "406": {
            "description": "Not acceptable"
          }
        }
      },

      "put": {
        "tags": ["Competition"],
        "summary": "Update Competition Stage by ID",
        "description": "Update a single Stages",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id_competition",
            "in": "path",
            "description": "ID of Stages that needs to be updated",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "stage",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Competition not found"
          },
          "406": {
            "description": "Not acceptable"
          }
        }
      },
      "post": {
        "tags": ["Competition"],
        "summary": "Create Competition Stages by Id",
        "description": "Create a single Stages",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "Stage",
            "in": "query",
            "required": true,
            "schema": {
              "type": "body"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Competition not found"
          },
          "406": {
            "description": "Not acceptable"
          }
        }
      }
    },
    "/competition/{id}": {
      "get": {
        "tags": ["Competition"],
        "summary": "Find Competition by ID",
        "security": [{ "bearerAuth": [] }],
        "description": "Returns a single competition",
        "parameters": [
          {
            "name": "id_competition",
            "in": "path",
            "description": "ID of competition to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Competition not found"
          },
          "406": {
            "description": "Not acceptable"
          }
        }
      },
      "delete": {
        "tags": ["Competition"],
        "summary": "Delete Competition by ID",
        "security": [{ "bearerAuth": [] }],
        "description": "Delete a single competition",
        "parameters": [
          {
            "name": "id_competition",
            "in": "path",
            "description": "ID of competition to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Competition not found"
          },
          "406": {
            "description": "Not acceptable"
          }
        }
      },
      "put": {
        "tags": ["Competition"],
        "summary": "Update Competition by ID",
        "security": [{ "bearerAuth": [] }],
        "description": "Update a single competition",
        "parameters": [
          {
            "name": "id_competition",
            "in": "path",
            "description": "ID of competition that needs to be updated",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "year",
            "in": "query",
            "required": true,
            "description": "Name of competition that needs to be updated",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Competition not found"
          },
          "406": {
            "description": "Not acceptable"
          }
        }
      }
    },
    "/games": {
      "get": {
        "summary": "Get all Games",
        "description": "Returns a list of games",
        "security": [{ "bearerAuth": [] }],
        "tags": ["Games"],

        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Games not found"
          },
          "406": {
            "description": "Not acceptable"
          }
        }
      },
      "post": {
        "tags": ["Games"],
        "summary": "Create Games by ID",
        "description": "Create a single Games",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "goals_team_house",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "goals_team_away",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "win_condition",
            "in": "query",
            "required": true,
            "schema": {
              "type": "body"
            }
          },
          {
            "name": "half_time_home_goals",
            "in": "query",
            "required": true,
            "schema": {
              "type": "body"
            }
          },
          {
            "name": "half_time_away_goals",
            "in": "query",
            "required": true,
            "schema": {
              "type": "body"
            }
          },
          {
            "name": "referee",
            "in": "query",
            "required": true,
            "schema": {
              "type": "body"
            }
          },
          {
            "name": "assistant_1",
            "in": "query",
            "required": true,
            "schema": {
              "type": "body"
            }
          },
          {
            "name": "assistant_2",
            "in": "query",
            "required": true,
            "schema": {
              "type": "body"
            }
          },
          {
            "name": "num_spectators",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Games not found"
          },
          "406": {
            "description": "Not acceptable"
          }
        }
      }
    },

    "/games/{id}/goals_team_house": {
      "get": {
        "tags": ["Games"],
        "summary": "Retrives goals team house by id",
        "security": [{ "bearerAuth": [] }],
        "description": "Returns goals team house",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Games not found"
          },
          "406": {
            "description": "Not acceptable"
          }
        }
      }
    },

    "/games/{id}/goals_team_away": {
      "get": {
        "tags": ["Games"],
        "summary": "Retrives goals team away by id",
        "security": [{ "bearerAuth": [] }],
        "description": "Returns goals team away",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Games not found"
          },
          "406": {
            "description": "Not acceptable"
          }
        }
      }
    },

    "/games/{id}/win_condition": {
      "get": {
        "tags": ["Games"],
        "summary": "Retrives games with win condition by id",
        "security": [{ "bearerAuth": [] }],
        "description": "Returns win conditions",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Games not found"
          },
          "406": {
            "description": "Not acceptable"
          }
        }
      }
    },

    "/games/{id}/half_time_home_goals": {
      "get": {
        "tags": ["Games"],
        "summary": "Retrives games with half time goals by id",
        "security": [{ "bearerAuth": [] }],
        "description": "Returns half time goals",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Games not found"
          },
          "406": {
            "description": "Not acceptable"
          }
        }
      }
    },

    "/games/{id}/half_time_away_goals": {
      "get": {
        "tags": ["Games"],
        "summary": "Retrives games with half time away goals by id",
        "security": [{ "bearerAuth": [] }],
        "description": "Returns half time away goals",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Games not found"
          },
          "406": {
            "description": "Not acceptable"
          }
        }
      }
    },

    "/games/{id}/referee": {
      "get": {
        "tags": ["Games"],
        "summary": "Retrives games with referee by id",
        "security": [{ "bearerAuth": [] }],
        "description": "Returns referee",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Games not found"
          },
          "406": {
            "description": "Not acceptable"
          }
        }
      }
    },

    "/games/{id}/assistant_1": {
      "get": {
        "tags": ["Games"],
        "summary": "Retrives games with assistant 1 by id",
        "security": [{ "bearerAuth": [] }],
        "description": "Returns assistant 1",
        "parameters": [
          {
            "name": "id_games",
            "in": "path",
            "description": "ID of Games to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Games not found"
          },
          "406": {
            "description": "Not acceptable"
          }
        }
      }
    },

    "/games/{id}/assistant_2": {
      "get": {
        "tags": ["Games"],
        "summary": "Retrives games with assistant 2 by id",
        "security": [{ "bearerAuth": [] }],
        "description": "Returns assistant 2",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Games not found"
          },
          "406": {
            "description": "Not acceptable"
          }
        }
      }
    },

    "/games/{id}/num_espectator": {
      "get": {
        "tags": ["Games"],
        "summary": "Retrives games with num espectators by id",
        "security": [{ "bearerAuth": [] }],
        "description": "Returns num espectators in a game",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Games not found"
          },
          "406": {
            "description": "Not acceptable"
          }
        }
      }
    },

    "/games/{id}": {
      "get": {
        "tags": ["Games"],
        "summary": "Find Games by ID",
        "description": "Returns a single Games",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id_games",
            "in": "path",
            "description": "ID of Games to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Games not found"
          },
          "406": {
            "description": "Not acceptable"
          }
        }
      },
      "delete": {
        "tags": ["Games"],
        "summary": "Delete Games by ID",
        "description": "Delete a single Game",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id_games",
            "in": "path",
            "description": "ID of Games to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Game not found"
          },
          "406": {
            "description": "Not acceptable"
          }
        }
      },
      "put": {
        "tags": ["Games"],
        "summary": "Update Games by ID",
        "description": "Update a single Games",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id_games",
            "in": "path",
            "description": "ID of Games that needs to be updated",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "goals_team_house",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "goals_team_away",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "win_condition",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "half_time_home_goals",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "half_time_away_goals",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "referee",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "assistant_1",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "assistant_2",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "num_spectators",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Games not found"
          },
          "406": {
            "description": "Not acceptable"
          }
        }
      }
    },

    "/stadiuns": {
      "get": {
        "summary": "Retrieve a list of stadium",
        "description": "Returns a list of stadium that the authenticated user has access to",
        "security": [{ "bearerAuth": [] }],
        "tags": ["Stadium"],

        "responses": {
          "200": {
            "description": "This endpoint always returns with success",
            "tags": ["Stadium"]
          },
          "responses": {
            "200": {
              "description": "successful operation"
            },
            "400": {
              "description": "Invalid ID supplied"
            },
            "404": {
              "description": "Stadium not found"
            },
            "406": {
              "description": "Not acceptable"
            }
          }
        }
      },
      "post": {
        "description": "Post one stadium by id",
        "security": [{ "bearerAuth": [] }],
        "tags": ["Stadium"],
        "summary": "Create Stadium by ID",
        "parameters": [
          {
            "name": "Stadium",
            "in": "query",
            "required": true,
            "schema": {
              "type": "body"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Stadium not found"
          },
          "406": {
            "description": "Not acceptable"
          }
        }
      }
    },
    "/stadium/{id}/name": {
      "get": {
        "description": "Retrieves Stadium name by id",
        "security": [{ "bearerAuth": [] }],
        "summary": "Find Stadium name by ID",
        "tags": ["Stadium"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Stadium not found"
          },
          "406": {
            "description": "Not acceptable"
          }
        }
      }
    },
    "/stadium/{id}/city": {
      "get": {
        "description": "Retrieves a city stadium by id",
        "security": [{ "bearerAuth": [] }],
        "summary": "Find Stadium by ID",
        "tags": ["Stadium"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Stadium not found"
          },
          "406": {
            "description": "Not acceptable"
          }
        }
      }
    },

    "/stadium/{id}": {
      "get": {
        "description": "Retrieves one stadium by id",
        "security": [{ "bearerAuth": [] }],
        "summary": "Find Stadium by ID",
        "tags": ["Stadium"],
        "parameters": [
          {
            "name": "id_stadium",
            "in": "path",
            "description": "ID of Stadium to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Stadium not found"
          },
          "406": {
            "description": "Not acceptable"
          }
        }
      },
      "delete": {
        "description": "Delete one stadium by id",
        "security": [{ "bearerAuth": [] }],
        "summary": "Delete Stadium by ID",
        "tags": ["Stadium"],
        "parameters": [
          {
            "name": "id_stadium",
            "in": "path",
            "description": "ID of Stadium ",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Stadium not found"
          }
        }
      },

      "put": {
        "description": "Put one stadium by id",
        "security": [{ "bearerAuth": [] }],
        "summary": "Update Stadium by ID",
        "tags": ["Stadium"],
        "parameters": [
          {
            "name": "id_stadium",
            "in": "path",
            "description": "ID of Stadium that needs to be updated",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "stadium",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Stadium not found"
          },
          "406": {
            "description": "Not acceptable"
          }
        }
      }
    },

    "/teams": {
      "get": {
        "summary": "Retrieve a list of teams",
        "description": "Returns a list of teams that the authenticated user has access to",
        "security": [{ "bearerAuth": [] }],
        "tags": ["Teams"],

        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Teams not found"
          },
          "406": {
            "description": "Not acceptable"
          }
        }
      },
      "post": {
        "description": "Post one teams by id",
        "security": [{ "bearerAuth": [] }],
        "summary": "Create Teams by ID",
        "tags": ["Teams"],
        "parameters": [
          {
            "name": "Teams",
            "in": "query",
            "required": true,
            "schema": {
              "type": "body"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Teams not found"
          },
          "406": {
            "description": "Not acceptable"
          }
        }
      }
    },
    "/teams/{id}/name": {
      "get": {
        "description": "Retrieves one team name by id",
        "security": [{ "bearerAuth": [] }],
        "summary": "Find Teams by ID",
        "tags": ["Teams"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Teams not found"
          },
          "406": {
            "description": "Not acceptable"
          }
        }
      }
    },
    "/teams/{id}/initials": {
      "get": {
        "description": "Retrieves one team initials by id",
        "security": [{ "bearerAuth": [] }],
        "summary": "Find Teams by ID",
        "tags": ["Teams"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Teams not found"
          },
          "406": {
            "description": "Not acceptable"
          }
        }
      }
    },

    "/teams/{id}": {
      "get": {
        "description": "Retrieves one teams by id",
        "security": [{ "bearerAuth": [] }],
        "summary": "Find Teams by ID",
        "tags": ["Teams"],
        "parameters": [
          {
            "name": "id_teams",
            "in": "path",
            "description": "ID of Teams to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Teams not found"
          },
          "406": {
            "description": "Not acceptable"
          }
        }
      },
      "delete": {
        "description": "Delete one stadium by id",
        "security": [{ "bearerAuth": [] }],
        "summary": "Delete Teams by ID",
        "tags": ["Teams"],
        "parameters": [
          {
            "name": "id_teams",
            "in": "path",
            "description": "ID of Teams ",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Teams not found"
          },
          "406": {
            "description": "Not acceptable"
          }
        }
      },

      "put": {
        "description": "Put one teams by id",
        "security": [{ "bearerAuth": [] }],
        "summary": "Update Teams by ID",
        "tags": ["Teams"],
        "parameters": [
          {
            "name": "id_teams",
            "in": "path",
            "description": "ID of Teams that needs to be updated",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "teams",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "responses": {
            "200": {
              "description": "successful operation"
            },
            "400": {
              "description": "Invalid ID supplied"
            },
            "404": {
              "description": "Competition not found"
            }
          }
        }
      }
    }
  }
}
