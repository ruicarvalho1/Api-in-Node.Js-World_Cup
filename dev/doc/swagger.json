{
  "swagger": "2.0",
  "info": {
    "version": "1.0",
    "title": "WorldCup Game Handling API",
    "description": "This API aims to manipulate the WorldCup games\n\nGithub repository where the Swagger and API files are contained: [https://github.com/ruicarvalho1/Project_SD](https://github.com/ruicarvalho1/Project_SD)"
  },

  "servers": [
    {
      "url": "http://localhost:3001/api/v1"
    }
  ],

  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },

  "paths": {
    "/token": {
      "post": {
        "tags": ["Authentication"],
        "security": [{ "bearerAuth": [] }],
        "summary": "Auth",
        "description": "This can only be done by the logged in user.",
        "requestBody": {
          "description": "Created user object"
        },
        "parameters": [],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": ["Users"],
        "summary": "Get users All",
        "security": [{ "bearerAuth": [] }],
        "description": "",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Login user object",
            "required": true,
            "schema": { "$ref": "#/userslogin" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid username supplied"
          },
          "404": {
            "description": "User not found"
          },
          "406": {
            "description": "Not acceptable"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": ["Users"],
        "summary": "Get users All",
        "security": [{ "bearerAuth": [] }],
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid username supplied"
          },
          "404": {
            "description": "User not found"
          },
          "406": {
            "description": "Not acceptable"
          }
        }
      },

      "post": {
        "tags": ["Users"],
        "security": [{ "bearerAuth": [] }],
        "summary": "Create user",
        "description": "This can only be done by the logged in user.",
        "requestBody": {
          "description": "Created user object"
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Create user object",
            "required": true,
            "schema": { "$ref": "#/userspost" }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },

    "/users/{id}": {
      "get": {
        "tags": ["Users"],
        "summary": "Get user by id",
        "security": [{ "bearerAuth": [] }],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The name that needs to be fetched. Use user1 for testing. ",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid username supplied"
          },
          "404": {
            "description": "User not found"
          },
          "406": {
            "description": "Not acceptable"
          }
        }
      },
      "put": {
        "tags": ["Users"],
        "summary": "Update Users by ID",
        "security": [{ "bearerAuth": [] }],
        "description": "Update a single competition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Users that needs to be updated",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "body",
            "name": "body",
            "description": "Updated user object",
            "required": true,
            "schema": { "$ref": "#/userspost" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Competition not found"
          },
          "406": {
            "description": "Not acceptable"
          }
        }
      },
      "delete": {
        "tags": ["Users"],
        "summary": "Delete user",
        "security": [{ "bearerAuth": [] }],
        "description": "This can only be done by the logged in user.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Users that needs to be Delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Competition not found"
          }
        }
      }
    },

    "/competitions": {
      "get": {
        "summary": "Get all Competitions",
        "description": "Returns a list of competions",
        "security": [{ "bearerAuth": [] }],
        "tags": ["Competition"],

        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Competition not found"
          },
          "406": {
            "description": "Not acceptable"
          }
        }
      },
      "post": {
        "tags": ["Competition"],
        "security": [{ "bearerAuth": [] }],
        "summary": "Create Competition by ID",
        "description": "Create a single competition",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Create Competition object",
            "required": true,
            "schema": { "$ref": "#/competitions" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Competition not found"
          },
          "406": {
            "description": "Not acceptable"
          }
        }
      }
    },
    "/competitions/{id}": {
      "get": {
        "tags": ["Competition"],
        "summary": "Find Competition by ID",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of pet to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "required": true,
        "description": "Returns a single competition",
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Competition not found"
          },
          "406": {
            "description": "Not acceptable"
          }
        }
      },
      "delete": {
        "tags": ["Competition"],
        "summary": "Delete Competition by ID",
        "security": [{ "bearerAuth": [] }],
        "description": "Delete a single competition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of competition to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Competition not found"
          },
          "406": {
            "description": "Not acceptable"
          }
        }
      },
      "put": {
        "tags": ["Competition"],
        "summary": "Update Competition by ID",
        "security": [{ "bearerAuth": [] }],
        "description": "Update a single competition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of competition that needs to be updated",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "body",
            "name": "body",
            "description": "Updated user object",
            "required": true,
            "schema": { "$ref": "#/competitions" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Competition not found"
          },
          "406": {
            "description": "Not acceptable"
          }
        }
      }
    },
    "/games": {
      "get": {
        "summary": "Get all Games",
        "description": "Returns a list of games",
        "security": [{ "bearerAuth": [] }],
        "tags": ["Games"],

        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Games not found"
          },
          "406": {
            "description": "Not acceptable"
          }
        }
      },
      "post": {
        "tags": ["Games"],
        "summary": "Create Games by ID",
        "description": "Create a single Games",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Create Games object",
            "required": true,
            "schema": { "$ref": "#/games" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Games not found"
          },
          "406": {
            "description": "Not acceptable"
          }
        }
      }
    },

    "/games/{id}/assistant_1": {
      "get": {
        "tags": ["Games"],
        "summary": "Retrives games with assistant 1 by id",
        "security": [{ "bearerAuth": [] }],
        "description": "Returns assistant 1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Games to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Games not found"
          },
          "406": {
            "description": "Not acceptable"
          }
        }
      }
    },

    "/games/{id}": {
      "get": {
        "tags": ["Games"],
        "summary": "Find Games by ID",
        "description": "Returns a single Games",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Games to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Games not found"
          },
          "406": {
            "description": "Not acceptable"
          }
        }
      },
      "delete": {
        "tags": ["Games"],
        "summary": "Delete Games by ID",
        "description": "Delete a single Game",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Games to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Game not found"
          },
          "406": {
            "description": "Not acceptable"
          }
        }
      },
      "put": {
        "tags": ["Games"],
        "summary": "Update Games by ID",
        "description": "Update a single Games",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Games that needs to be updated",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "body",
            "name": "body",
            "description": "Updated user object",
            "required": true,
            "schema": { "$ref": "#/games" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Games not found"
          },
          "406": {
            "description": "Not acceptable"
          }
        }
      }
    },

    "/stadiums": {
      "get": {
        "summary": "Retrieve a list of stadium",
        "description": "Returns a list of stadium that the authenticated user has access to",
        "security": [{ "bearerAuth": [] }],
        "tags": ["Stadium"],

        "responses": {
          "200": {
            "description": "This endpoint always returns with success",
            "tags": ["Stadium"]
          },
          "responses": {
            "200": {
              "description": "successful operation"
            },
            "400": {
              "description": "Invalid ID supplied"
            },
            "404": {
              "description": "Stadium not found"
            },
            "406": {
              "description": "Not acceptable"
            }
          }
        }
      },
      "post": {
        "description": "Post one stadium by id",
        "security": [{ "bearerAuth": [] }],
        "tags": ["Stadium"],
        "summary": "Create Stadium by ID",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Create user object",
            "required": true,
            "schema": { "$ref": "#/stadiums" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Stadium not found"
          },
          "406": {
            "description": "Not acceptable"
          }
        }
      }
    },
    "/stadiums/{id}/name": {
      "get": {
        "description": "Retrieves Stadium name by id",
        "security": [{ "bearerAuth": [] }],
        "summary": "Find Stadium name by ID",
        "tags": ["Stadium"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Games to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Stadium not found"
          },
          "406": {
            "description": "Not acceptable"
          }
        }
      }
    },

    "/stadiums/{id}": {
      "get": {
        "description": "Retrieves one stadium by id",
        "security": [{ "bearerAuth": [] }],
        "summary": "Find Stadium by ID",
        "tags": ["Stadium"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Stadium to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Stadium not found"
          },
          "406": {
            "description": "Not acceptable"
          }
        }
      },
      "delete": {
        "description": "Delete one stadium by id",
        "security": [{ "bearerAuth": [] }],
        "summary": "Delete Stadium by ID",
        "tags": ["Stadium"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Stadium ",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Stadium not found"
          }
        }
      },

      "put": {
        "description": "Put one stadium by id",
        "security": [{ "bearerAuth": [] }],
        "summary": "Update Stadium by ID",
        "tags": ["Stadium"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Stadiums that needs to be updated",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "body",
            "name": "body",
            "description": "Updated user object",
            "required": true,
            "schema": { "$ref": "#/stadiums" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Stadium not found"
          },
          "406": {
            "description": "Not acceptable"
          }
        }
      }
    },

    "/teams": {
      "get": {
        "summary": "Retrieve a list of teams",
        "description": "Returns a list of teams that the authenticated user has access to",
        "security": [{ "bearerAuth": [] }],
        "tags": ["Teams"],

        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Teams not found"
          },
          "406": {
            "description": "Not acceptable"
          }
        }
      },
      "post": {
        "description": "Post one teams by id",
        "security": [{ "bearerAuth": [] }],
        "summary": "Create Teams by ID",
        "tags": ["Teams"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Create user object",
            "required": true,
            "schema": { "$ref": "#/teams" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Teams not found"
          },
          "406": {
            "description": "Not acceptable"
          }
        }
      }
    },
    "/teams/{id}/initials": {
      "get": {
        "description": "Retrieves one team initials by id",
        "security": [{ "bearerAuth": [] }],
        "summary": "Find Teams by ID",
        "tags": ["Teams"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Games to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Teams not found"
          },
          "406": {
            "description": "Not acceptable"
          }
        }
      }
    },

    "/teams/{id}": {
      "get": {
        "description": "Retrieves one teams by id",
        "security": [{ "bearerAuth": [] }],
        "summary": "Find Teams by ID",
        "tags": ["Teams"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Teams to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Teams not found"
          },
          "406": {
            "description": "Not acceptable"
          }
        }
      },
      "delete": {
        "description": "Delete one stadium by id",
        "security": [{ "bearerAuth": [] }],
        "summary": "Delete Teams by ID",
        "tags": ["Teams"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Teams ",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Teams not found"
          },
          "406": {
            "description": "Not acceptable"
          }
        }
      },

      "put": {
        "description": "Put one teams by id",
        "security": [{ "bearerAuth": [] }],
        "summary": "Update Teams by ID",
        "tags": ["Teams"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Teams that needs to be updated",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "body",
            "name": "body",
            "description": "Updated teams object",
            "required": true,
            "schema": { "$ref": "#/teams" }
          }
        ],
        "responses": {
          "responses": {
            "200": {
              "description": "successful operation"
            },
            "400": {
              "description": "Invalid ID supplied"
            },
            "404": {
              "description": "Competition not found"
            }
          }
        }
      }
    }
  },

  "userslogin": {
    "type": "object",
    "properties": {
      "username": { "type": "string" },
      "password": { "type": "string" }
    }
  },
  "userspost": {
    "type": "object",
    "properties": {
      "username": { "type": "string" },
      "password": { "type": "string" },
      "role": { "type": "string" }
    }
  },
  "competitions": {
    "type": "object",
    "properties": {
      "year": { "type": "integer" },
      "stage": { "type": "string" }
    }
  },
  "teams": {
    "type": "object",
    "properties": {
      "name": { "type": "string" },
      "initials": { "type": "string" }
    }
  },
  "stadiums": {
    "type": "object",
    "properties": {
      "name": { "type": "string" },
      "city": { "type": "string" }
    }
  },
  "games": {
    "type": "object",
    "properties": {
      "goals_team_house": { "type": "integer" },
      "goals_team_away": { "type": "integer" },
      "half_time_home_goals": { "type": "integer" },
      "half_time_away_goals": { "type": "integer" },
      "win_condition": { "type": "string" },
      "referee": { "type": "string" },
      "assistant_1": { "type": "string" },
      "assistant_2": { "type": "string" },
      "num_spectators": { "type": "integer" },
      "id_stadium": { "type": "integer" },
      "id_team_home": { "type": "integer" },
      "id_team_away": { "type": "integer" }
    }
  }
}
